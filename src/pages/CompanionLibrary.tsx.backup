import { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { useToast } from "../hooks/use-toast";
import { supabase } from "../integrations/supabase/client";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar";
import { Input } from "@/components/ui/input";
import { EnhancedCharacterCard } from "@/components/EnhancedCharacterCard";
import { SimpleChatInterface } from "@/components/SimpleChatInterface";
import { VoiceCallInterface } from "@/components/VoiceCallInterface";
import { 
  MessageSquare, 
  Phone, 
  Search,
  Filter,
  Plus,
  ArrowLeft,
  Heart,
  Clock,
  Star,
  Grid3X3,
  List,
  SortAsc,
  MoreVertical,
  Trash2,
  Edit,
  Copy
} from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import { isSupabaseConfigured, supabase } from "@/lib/supabase";
import { useNavigate } from "react-router-dom";

interface Character {
  id: string;
  name: string;
  avatar: string;
  bio: string;
  personality: string[];
  voice: string;
  voice_id?: string;
  isOnline: boolean;
  mood?: string;
  lastMessage?: string;
  unreadCount?: number;
  relationshipLevel?: number;
  createdAt?: string;
  isFavorite?: boolean;
}

type View = 'library' | 'chat' | 'call';
type SortBy = 'name' | 'created' | 'relationship' | 'lastMessage';
type ViewMode = 'grid' | 'list';

const CompanionLibrary = () => {
  const { toast } = useToast();
  const navigate = useNavigate();
  
  const [currentView, setCurrentView] = useState<View>('library');
  const [selectedCharacter, setSelectedCharacter] = useState<Character | null>(null);
  const [characters, setCharacters] = useState<Character[]>([]);
  const [loading, setLoading] = useState(true);
  const [searchQuery, setSearchQuery] = useState("");
  const [sortBy, setSortBy] = useState<SortBy>('created');
  const [viewMode, setViewMode] = useState<ViewMode>('grid');
  const [showFilters, setShowFilters] = useState(false);
  const [favorites, setFavorites] = useState<string[]>([]);

  // Load characters from Supabase
  useEffect(() => {
    loadCharacters();
  }, []);

  const loadCharacters = async () => {
    if (!isSupabaseConfigured) {
      // Load characters from database
      // Load from database instead of demo data
      setLoading(false);
      return;
    }

    try {
      setLoading(true);
      const { data, error } = await supabase
        .from('characters')
        .select('*')
        .order('created_at', { ascending: false });

      if (error) throw error;

      const formattedCharacters = data.map((char: any) => ({
        id: char.id,
        name: char.name,
        avatar: char.avatar_url || '/placeholder.svg',
        bio: char.bio,
        personality: char.personality || [],
        voice: char.voice,
        voice_id: char.voice_id,
        isOnline: true,
        mood: 'happy',
        lastMessage: "Ready to chat! ðŸ’•",
        unreadCount: 0,
        relationshipLevel: 1.0,
        createdAt: char.created_at,
        isFavorite: false
      }));

      setCharacters(formattedCharacters);
    } catch (error) {
      console.error('Error loading characters:', error);
      toast({ title: "Error", description: "Failed to load companions" });
      // Load from database instead of demo data
    } finally {
      setLoading(false);
    }
  };

  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-pink-50 to-purple-50">
      <div className="container mx-auto px-4 py-8">
        <div className="flex items-center justify-between mb-8">
          <div>
            <h1 className="text-3xl font-bold text-gray-900 mb-2">My Companions</h1>
            <p className="text-gray-600">Manage your AI companions and create new ones</p>
          </div>
          <Button onClick={() => navigate("/create")} className="bg-pink-600 hover:bg-pink-700">
            <Plus className="w-4 h-4 mr-2" />
            Create New
          </Button>
        </div>

        {loading ? (
          <div className="flex justify-center items-center h-64">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-pink-600"></div>
          </div>
        ) : characters.length === 0 ? (
          <div className="text-center py-12">
            <Heart className="w-16 h-16 text-gray-400 mx-auto mb-4" />
            <h3 className="text-xl font-semibold text-gray-900 mb-2">No companions yet</h3>
            <p className="text-gray-600 mb-6">Create your first AI companion to get started</p>
            <Button onClick={() => navigate("/create")} className="bg-pink-600 hover:bg-pink-700">
              Create Your First Companion
            </Button>
          </div>
        ) : (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {characters.map((character) => (
              <CharacterCard
                key={character.id}
                character={character}
                onSelect={() => navigate(`/chat/${character.id}`)}
                onDelete={() => handleDeleteCharacter(character.id)}
              />
            ))}
          </div>
        )}
      </div>
    </div>
  );
};
